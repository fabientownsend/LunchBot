# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/dm-serializer/all/dm-serializer.rbi
#
# dm-serializer-1.2.2
module DataMapper
end
module DataMapper::Serializer
  def as_json(options = nil); end
  def encode_with(coder, options = nil); end
  def properties_to_serialize(options); end
  def self.included(descendant); end
  def to_csv(*args); end
  def to_json(*args); end
  def to_xml(opts = nil); end
  def to_xml_document(opts = nil, doc = nil); end
  def to_yaml(options = nil); end
  def to_yaml_type; end
end
module DataMapper::Serializer::ValidationErrors
end
module DataMapper::Serializer::ValidationErrors::ToJson
  def to_json(*args); end
end
class DataMapper::Collection < LazyArray
  def to_csv(*args); end
  def to_json(*args); end
  def to_xml(opts = nil); end
  def to_xml_document(opts = nil); end
  include DataMapper::Serializer::Collection::ToYaml
end
module DataMapper::Serializer::XML
  def self.serializer; end
  def self.serializer=(name); end
end
module DataMapper::Serializer::XML::REXML
  def self.add_node(parent, name, value, attrs = nil); end
  def self.add_xml(parent, xml); end
  def self.new_document; end
  def self.output(doc); end
  def self.root_node(document, name, attrs = nil); end
end
module DataMapper::Serializer::ValidationErrors::ToXml
  def to_xml(opts = nil); end
  def to_xml_document(opts = nil); end
end
module DataMapper::Serializer::ValidationErrors::ToYaml
  def encode_with(coder); end
  def to_yaml(*args); end
end
module DataMapper::Serializer::Collection
end
module DataMapper::Serializer::Collection::ToYaml
  def encode_with(coder); end
  def to_yaml(*args); end
end
module DataMapper::Serializer::ValidationErrors::ToCsv
  def to_csv(*args); end
end
