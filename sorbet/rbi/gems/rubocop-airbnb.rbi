# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rubocop-airbnb/all/rubocop-airbnb.rbi
#
# rubocop-airbnb-2.0.0
module RuboCop
end
module RuboCop::Cop
end
module RuboCop::Cop::Airbnb
end
class RuboCop::Cop::Airbnb::UnsafeYamlMarshal < RuboCop::Cop::Cop
  def check_marshal(node, receiver, method_name, *_args); end
  def check_yaml(node, receiver, method_name, *_args); end
  def on_send(node); end
end
class RuboCop::Cop::Airbnb::FactoryClassUseString < RuboCop::Cop::Cop
  def class_node(node); end
  def on_send(node); end
  def string_class_name?(class_pair); end
end
module Inflections
  def underscore(camel_cased_word); end
end
module RailsAutoloading
  def allowable_paths_for(expected_dir, options = nil); end
  def full_const_name(parent_module_name, const_name); end
  def normalize_module_name(module_name); end
  def run_rails_autoloading_cops?(path); end
  def split_modules(module_name); end
end
class RuboCop::Cop::Airbnb::ModuleMethodInWrongFile < RuboCop::Cop::Cop
  def on_def(node); end
  def on_defs(node); end
  def on_method_def(node, method_name, args, body); end
  include Inflections
  include RailsAutoloading
end
class RuboCop::Cop::Airbnb::NoTimeout < RuboCop::Cop::Cop
  def on_send(node); end
end
class RuboCop::Cop::Airbnb::SimpleUnless < RuboCop::Cop::Cop
  def multiple_conditionals?(node = nil); end
  def on_if(node); end
end
class RuboCop::Cop::Airbnb::ClassOrModuleDeclaredInWrongFile < RuboCop::Cop::Cop
  def add_error(const_name, fully_qualified_const_name, node); end
  def error_class?(node, class_or_module, const_name); end
  def on_class(node); end
  def on_class_or_module(node); end
  def on_module(node); end
  include Inflections
  include RailsAutoloading
end
class RuboCop::Cop::Airbnb::MassAssignmentAccessibleModifier < RuboCop::Cop::Cop
  def on_send(node); end
end
class RuboCop::Cop::Airbnb::ClassName < RuboCop::Cop::Cop
  def class_name_node(node); end
  def on_send(node); end
  def string_class_name?(class_pair); end
end
class RuboCop::Cop::Airbnb::RspecDescribeOrContextUnderNamespace < RuboCop::Cop::Cop
  def describe_or_context?(node = nil); end
  def get_described_class(node); end
  def get_method_parent(node); end
  def get_module_name(node); end
  def is_block?(node); end
  def is_spec_file?(path); end
  def on_module(node); end
  def search_children_for_describe_or_context(nodes); end
end
class RuboCop::Cop::Airbnb::SpecConstantAssignment < RuboCop::Cop::Cop
  def in_spec_file?(node); end
  def on_casgn(node); end
  include RuboCop::RSpec::TopLevelDescribe
end
class RuboCop::Cop::Airbnb::ConstAssignedInWrongFile < RuboCop::Cop::Cop
  def add_error(const_name, node); end
  def on_casgn(node); end
  include Inflections
  include RailsAutoloading
end
class RuboCop::Cop::Airbnb::FactoryAttrReferencesClass < RuboCop::Cop::Cop
  def add_const_offenses(node); end
  def factory_attributes(node0); end
  def in_factory_file?(node); end
  def in_factory_or_trait?(node); end
  def on_send(node); end
end
class RuboCop::Cop::Airbnb::SimpleModifierConditional < RuboCop::Cop::Cop
  def multiple_conditionals?(node = nil); end
  def on_if(node); end
end
class RuboCop::Cop::Airbnb::PhraseBundleKeys < RuboCop::Cop::Cop
  def const_phrase_bundle_children(node); end
  def in_phrase_bundle_class?(node); end
  def on_send(node); end
  def t_call?(node); end
end
class RuboCop::Cop::Airbnb::ContinuationSlash < RuboCop::Cop::Cop
  def enforce_violation(node); end
  def on_and_asgn(node); end
  def on_casgn(node); end
  def on_cvasgn(node); end
  def on_gvasgn(node); end
  def on_if(node); end
  def on_ivasgn(node); end
  def on_lvasgn(node); end
  def on_masgn(node); end
  def on_op_asgn(node); end
  def on_or_asgn(node); end
  def on_send(node); end
end
class RuboCop::Cop::Airbnb::RspecEnvironmentModification < RuboCop::Cop::Cop
  def allow_or_expect_rails_env(node = nil); end
  def is_spec_file?(path); end
  def on_send(node); end
  def rails_env_assignment(node = nil); end
  def stub_rails_env(node = nil); end
end
class RuboCop::Cop::Airbnb::RiskyActiverecordInvocation < RuboCop::Cop::Cop
  def includes_interpolation?(args); end
  def includes_sum?(args); end
  def on_send(node); end
  def vulnerable_ar_method?(method); end
end
class RuboCop::Cop::Airbnb::OptArgParameters < RuboCop::Cop::Cop
  def on_args(node); end
end
class RuboCop::Cop::Airbnb::DefaultScope < RuboCop::Cop::Cop
  def on_send(node); end
end
module RuboCop::Airbnb
end
module RuboCop::Airbnb::Inject
  def self.defaults!; end
end
