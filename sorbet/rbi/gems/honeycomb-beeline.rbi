# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/honeycomb-beeline/all/honeycomb-beeline.rbi
#
# honeycomb-beeline-0.7.0
module Honeycomb
  def self.active_parent_span_id; end
  def self.active_parent_span_id=(parent_span_id); end
  def self.active_trace_context; end
  def self.active_trace_context=(trace_context); end
  def self.active_trace_id; end
  def self.active_trace_id=(trace_id); end
  def self.add_trace_field(name, value); end
  def self.after_init(label, &block); end
  def self.after_init_hooks; end
  def self.client; end
  def self.debug(msg); end
  def self.decode_payload_context_v1(encoded_payload_context); end
  def self.decode_payload_v1(encoded_payload); end
  def self.decode_trace_context(encoded_context); end
  def self.encode_payload_context_v1(context); end
  def self.encode_payload_id_v1(id); end
  def self.encode_payload_part_v1(param, value); end
  def self.encode_payload_v1(payload_parts); end
  def self.encode_trace_context(trace_id, parent_span_id, context); end
  def self.encode_trace_context_v1(trace_id, parent_span_id, context); end
  def self.finish_span!(parent_span_id); end
  def self.finish_trace!; end
  def self.info(msg); end
  def self.init(writekey: nil, dataset: nil, service_name: nil, without: nil, debug: nil, logger: nil, **options); end
  def self.logger; end
  def self.new_client(options); end
  def self.reset; end
  def self.run_hook(label, block); end
  def self.service_name; end
  def self.shutdown; end
  def self.span(name = nil, type: nil, fields: nil, **extra_fields); end
  def self.span_for_existing_event(event, name:, type:); end
  def self.start_span!; end
  def self.start_trace!(trace_id: nil, parent_span_id: nil, context: nil); end
  def self.trace(trace_id: nil, parent_span_id: nil, context: nil, **extra_context); end
  def self.trace_from_encoded_context(encoded_context = nil, additional_context: nil); end
  def self.warn(msg); end
  def self.with_span; end
  def self.with_trace(trace_id: nil, parent_span_id: nil, context: nil); end
end
module Honeycomb::Beeline
end
